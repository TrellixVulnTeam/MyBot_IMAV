[91m2021-09-29 19:34:11 W/: HeartbeatFailedException: AliveHeartbeat, recoverable=true, cause=PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
HeartbeatFailedException: AliveHeartbeat, recoverable=true, cause=PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1$1.invoke(NettyNetworkHandler.kt:361)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1$1.invoke(NettyNetworkHandler.kt:361)
	at net.mamoe.mirai.internal.network.handler.NetworkHandlerSupport.setStateImpl$mirai_core(NetworkHandlerSupport.kt:251)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1.invoke(NettyNetworkHandler.kt:407)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1.invoke(NettyNetworkHandler.kt:360)
	at net.mamoe.mirai.internal.network.components.TimeBasedHeartbeatSchedulerImpl$launchHeartbeatJobAsync$1.invokeSuspend(HeartbeatScheduler.kt:108)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.internal.ScopeCoroutine.afterResume(Scopes.kt:33)
	at kotlinx.coroutines.AbstractCoroutine.resumeWith(AbstractCoroutine.kt:102)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)
	at kotlinx.coroutines.internal.ScopeCoroutine.afterResume(Scopes.kt:33)
	at kotlinx.coroutines.AbstractCoroutine.resumeWith(AbstractCoroutine.kt:102)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:571)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:750)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:678)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:665)
Caused by: PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
	... 13 more
Caused by: kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms
	at kotlinx.coroutines.TimeoutKt.TimeoutCancellationException(Timeout.kt:186)
	at kotlinx.coroutines.TimeoutCoroutine.run(Timeout.kt:156)
	at kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask.run(EventLoop.common.kt:497)
	at kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274)
	at kotlinx.coroutines.DefaultExecutor.run(DefaultExecutor.kt:69)
	at java.base/java.lang.Thread.run(Thread.java:833)
[0m
[91m2021-09-29 19:34:11 W/: java.net.UnknownHostException: ‰∏çÁü•ÈÅìËøôÊ†∑ÁöÑ‰∏ªÊú∫„ÄÇ (msfwifi.3g.qq.com)
java.net.UnknownHostException: ‰∏çÁü•ÈÅìËøôÊ†∑ÁöÑ‰∏ªÊú∫„ÄÇ (msfwifi.3g.qq.com)
	at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(InetAddress.java:933)
	at java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1519)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:852)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1509)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1367)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1301)
	at java.base/java.net.InetAddress.getByName(InetAddress.java:1251)
	at io.netty.util.internal.SocketUtils$8.run(SocketUtils.java:156)
	at io.netty.util.internal.SocketUtils$8.run(SocketUtils.java:153)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at io.netty.util.internal.SocketUtils.addressByName(SocketUtils.java:153)
	at io.netty.resolver.DefaultNameResolver.doResolve(DefaultNameResolver.java:41)
	at io.netty.resolver.SimpleNameResolver.resolve(SimpleNameResolver.java:61)
	at io.netty.resolver.SimpleNameResolver.resolve(SimpleNameResolver.java:53)
	at io.netty.resolver.InetSocketAddressResolver.doResolve(InetSocketAddressResolver.java:55)
	at io.netty.resolver.InetSocketAddressResolver.doResolve(InetSocketAddressResolver.java:31)
	at io.netty.resolver.AbstractAddressResolver.resolve(AbstractAddressResolver.java:106)
	at io.netty.bootstrap.Bootstrap.doResolveAndConnect0(Bootstrap.java:206)
	at io.netty.bootstrap.Bootstrap.access$000(Bootstrap.java:46)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:180)
	at io.netty.bootstrap.Bootstrap$1.operationComplete(Bootstrap.java:166)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetSuccess(AbstractChannel.java:1012)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:516)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: kotlinx.coroutines.JobCancellationException: Parent job is Cancelling; job=JobImpl{Cancelled}@6de0a02c
	Caused by: [CIRCULAR REFERENCE: java.net.UnknownHostException: ‰∏çÁü•ÈÅìËøôÊ†∑ÁöÑ‰∏ªÊú∫„ÄÇ (msfwifi.3g.qq.com)]
	Suppressed: [CIRCULAR REFERENCE: kotlinx.coroutines.JobCancellationException: Parent job is Cancelling; job=JobImpl{Cancelled}@6de0a02c]
[0m
[91m2021-09-29 19:34:14 W/: io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /113.96.12.224:8080
io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /113.96.12.224:8080
	Suppressed: kotlinx.coroutines.JobCancellationException: Parent job is Cancelling; job=JobImpl{Cancelled}@22bc4557
	Caused by: [CIRCULAR REFERENCE: io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /113.96.12.224:8080]
	Suppressed: [CIRCULAR REFERENCE: kotlinx.coroutines.JobCancellationException: Parent job is Cancelling; job=JobImpl{Cancelled}@22bc4557]
Caused by: java.net.NoRouteToHostException: No route to host: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:330)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:707)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
[0m
[0m2021-09-29 19:34:27 V/: Loading server list from cache.[0m
[92m2021-09-29 19:34:27 I/: Server list: 42.81.172.215:14000, msfwifi.3g.qq.com:8080, 114.221.151.171:80, 42.81.192.211:80, 42.81.170.51:443, 114.221.148.210:8080, 14.22.3.114:8080, 42.81.170.122:443, 14.22.3.35:14000, 125.94.60.175:14000.[0m
[92m2021-09-29 19:34:27 I/: ECDH key is invalid, start to fetch ecdh public key from server.[0m
[92m2021-09-29 19:34:28 I/: Successfully fetched ecdh public key from server.[0m
[0m2021-09-29 19:34:28 V/: Send: wtlogin.exchange_emp[0m
[0m2021-09-29 19:34:28 V/: Recv: wtlogin.exchange_emp[0m
[0m2021-09-29 19:34:28 V/: Send: StatSvc.register(online)[0m
[0m2021-09-29 19:34:28 V/: Recv: StatSvc.register[0m
[92m2021-09-29 19:34:28 I/: Scheduled refresh login session in 19d 23h 55min 0.0s.[0m
[92m2021-09-29 19:34:28 I/: Scheduled key refresh in 23h 55min 0.0s.[0m
[0m2021-09-29 19:34:31 V/: Recv: ConfigPushSvc.PushReq[0m
[92m2021-09-29 19:34:31 I/: Server list: 36.155.202.141:80, 36.155.228.114:14000, 36.155.229.203:14000, 120.232.18.180:443, msfwifi.3g.qq.com:8080, 120.241.139.76:8080, 111.30.169.93:80, 111.30.181.202:8080, 111.30.187.240:80, 111.30.169.27:80.[0m
[0m2021-09-29 19:34:31 V/: Saving bdh session to cache[0m
[0m2021-09-29 19:34:31 V/: Saving server list to cache[0m
[0m2021-09-29 19:34:31 V/: Send: ConfigPushSvc.PushResp(ConfigPushSvc.PushResp)[0m
[0m2021-09-29 19:34:31 V/: Recv: ConfigPushSvc.PushReq[0m
[0m2021-09-29 19:34:31 V/: Saving bdh session to cache[0m
[0m2021-09-29 19:34:31 V/: Send: ConfigPushSvc.PushResp(ConfigPushSvc.PushResp)[0m
[0m2021-09-29 20:29:52 V/Net 2175399102: Loading server list from cache.[0m
[92m2021-09-29 20:29:52 I/Net 2175399102: Server list: 36.155.202.141:80, 36.155.228.114:14000, 36.155.229.203:14000, 120.232.18.180:443, msfwifi.3g.qq.com:8080, 120.241.139.76:8080, 111.30.169.93:80, 111.30.181.202:8080, 111.30.187.240:80, 111.30.169.27:80.[0m
[92m2021-09-29 20:29:54 I/Net 2175399102: ECDH key is valid.[0m
[0m2021-09-29 20:29:54 V/Net 2175399102: Send: wtlogin.exchange_emp[0m
[0m2021-09-29 20:29:55 V/Net 2175399102: Recv: wtlogin.exchange_emp[0m
[0m2021-09-29 20:29:55 V/Net 2175399102: Send: StatSvc.register(online)[0m
[0m2021-09-29 20:29:55 V/Net 2175399102: Recv: StatSvc.register[0m
[92m2021-09-29 20:29:55 I/Net 2175399102: Syncing friend message history...[0m
[0m2021-09-29 20:29:55 V/Net 2175399102: Loading BdhSession from cache file[0m
[92m2021-09-29 20:29:55 I/Net 2175399102: Start loading friend list...[0m
[92m2021-09-29 20:29:55 I/Net 2175399102: Start loading stranger list...[0m
[0m2021-09-29 20:29:55 V/Net 2175399102: Send: StatSvc.GetDevLoginInfo(StatSvc.GetDevLoginInfo)[0m
[0m2021-09-29 20:29:55 V/Net 2175399102: Send: OidbSvc.0x496(OidbSvc.0x496)[0m
[0m2021-09-29 20:29:55 V/Net 2175399102: Send: friendlist.getFriendGroupList(friendlist.getFriendGroupList)[0m
[0m2021-09-29 20:29:55 V/Net 2175399102: Send: OidbSvc.0x5d2_0(OidbSvc.0x5d2_0)[0m
[92m2021-09-29 20:29:55 I/Net 2175399102: Syncing friend message history: Success.[0m
[0m2021-09-29 20:29:55 V/Net 2175399102: Recv: OidbSvc.0x5d2_0[0m
[92m2021-09-29 20:29:55 I/Net 2175399102: Successfully loaded stranger list: 0 in total[0m
[0m2021-09-29 20:29:55 V/Net 2175399102: Recv: StatSvc.GetDevLoginInfo[0m
[92m2021-09-29 20:29:55 I/Net 2175399102: No OtherClient online.[0m
[0m2021-09-29 20:29:55 V/Net 2175399102: Recv: OidbSvc.0x496[0m
[92m2021-09-29 20:29:55 I/Net 2175399102: Start loading group list...[0m
[0m2021-09-29 20:29:55 V/Net 2175399102: Send: friendlist.GetTroopListReqV2(friendlist.GetTroopListReqV2)[0m
[0m2021-09-29 20:29:56 V/Net 2175399102: Recv: friendlist.GetTroopListReqV2[0m
[0m2021-09-29 20:29:56 V/Net 2175399102: Recv: friendlist.getFriendGroupList[0m
[0m2021-09-29 20:29:56 V/Net 2175399102: Loading friend list: 3/3[0m
[92m2021-09-29 20:29:56 I/Net 2175399102: Successfully loaded friend list: 3 in total[0m
[0m2021-09-29 20:29:56 V/Net 2175399102: Send: friendlist.GetTroopMemberListReq(friendlist.GetTroopMemberListReq)[0m
[0m2021-09-29 20:29:56 V/Net 2175399102: Recv: friendlist.GetTroopMemberListReq[0m
[92m2021-09-29 20:29:56 I/Net 2175399102: Successfully loaded group list: 1 in total.[0m
[92m2021-09-29 20:29:57 I/Net 2175399102: Scheduled refresh login session in 19d 23h 55min 0.0s.[0m
[92m2021-09-29 20:29:57 I/Net 2175399102: Scheduled key refresh in 23h 55min 0.0s.[0m
[0m2021-09-29 20:29:58 V/Net 2175399102: Recv: ConfigPushSvc.PushReq[0m
[92m2021-09-29 20:29:58 I/Net 2175399102: Server list: 111.30.169.93:80, 111.30.178.182:8080, 36.155.229.117:14000, 120.232.18.82:8080, msfwifi.3g.qq.com:8080, 36.155.249.96:80, 120.232.19.169:443, 36.155.229.203:14000, 111.30.178.34:80, 111.30.181.202:80.[0m
[0m2021-09-29 20:29:58 V/Net 2175399102: Saving bdh session to cache[0m
[0m2021-09-29 20:29:58 V/Net 2175399102: Saving server list to cache[0m
[0m2021-09-29 20:29:58 V/Net 2175399102: Send: ConfigPushSvc.PushResp(ConfigPushSvc.PushResp)[0m
[0m2021-09-29 20:29:58 V/Net 2175399102: Recv: ConfigPushSvc.PushReq[0m
[0m2021-09-29 20:29:58 V/Net 2175399102: Saving bdh session to cache[0m
[0m2021-09-29 20:29:58 V/Net 2175399102: Send: ConfigPushSvc.PushResp(ConfigPushSvc.PushResp)[0m
[0m2021-09-29 20:30:56 V/Net 2175399102: Send: MessageSvc.PbSendMsg(MessageSvc.PbSendMsg)[0m
[0m2021-09-29 20:30:56 V/Net 2175399102: Recv: MessageSvc.PbSendMsg[0m
[0m2021-09-29 20:32:00 V/Net 2175399102: Send: friendlist.GetTroopListReqV2(friendlist.GetTroopListReqV2)[0m
[0m2021-09-29 20:32:00 V/Net 2175399102: Send: ProfileService.Pb.ReqSystemMsgNew.Group(ProfileService.Pb.ReqSystemMsgNew.Group)[0m
[0m2021-09-29 20:32:01 V/Net 2175399102: Recv: friendlist.GetTroopListReqV2[0m
[0m2021-09-29 20:32:01 V/Net 2175399102: Send: friendlist.GetTroopMemberListReq(friendlist.GetTroopMemberListReq)[0m
[0m2021-09-29 20:32:01 V/Net 2175399102: Recv: friendlist.GetTroopMemberListReq[0m
[0m2021-09-29 20:32:26 V/Net 2175399102: Send: MessageSvc.PbSendMsg(MessageSvc.PbSendMsg)[0m
[0m2021-09-29 20:32:26 V/Net 2175399102: Recv: MessageSvc.PbSendMsg[0m
[0m2021-09-29 20:34:17 V/Net 2175399102: Send: MessageSvc.PbSendMsg(MessageSvc.PbSendMsg)[0m
[0m2021-09-29 20:34:18 V/Net 2175399102: Recv: MessageSvc.PbSendMsg[0m
[91m2021-09-29 21:09:48 W/Net 2175399102: HeartbeatFailedException: AliveHeartbeat, recoverable=true, cause=PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
HeartbeatFailedException: AliveHeartbeat, recoverable=true, cause=PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1$1.invoke(NettyNetworkHandler.kt:361)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1$1.invoke(NettyNetworkHandler.kt:361)
	at net.mamoe.mirai.internal.network.handler.NetworkHandlerSupport.setStateImpl$mirai_core(NetworkHandlerSupport.kt:251)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1.invoke(NettyNetworkHandler.kt:407)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1.invoke(NettyNetworkHandler.kt:360)
	at net.mamoe.mirai.internal.network.components.TimeBasedHeartbeatSchedulerImpl$launchHeartbeatJobAsync$1.invokeSuspend(HeartbeatScheduler.kt:108)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.internal.ScopeCoroutine.afterResume(Scopes.kt:33)
	at kotlinx.coroutines.AbstractCoroutine.resumeWith(AbstractCoroutine.kt:102)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)
	at kotlinx.coroutines.internal.ScopeCoroutine.afterResume(Scopes.kt:33)
	at kotlinx.coroutines.AbstractCoroutine.resumeWith(AbstractCoroutine.kt:102)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:571)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:750)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:678)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:665)
Caused by: PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
	... 13 more
Caused by: kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms
	at kotlinx.coroutines.TimeoutKt.TimeoutCancellationException(Timeout.kt:186)
	at kotlinx.coroutines.TimeoutCoroutine.run(Timeout.kt:156)
	at kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask.run(EventLoop.common.kt:497)
	at kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274)
	at kotlinx.coroutines.DefaultExecutor.run(DefaultExecutor.kt:69)
	at java.base/java.lang.Thread.run(Thread.java:833)
[0m
[0m2021-09-29 21:09:49 V/Net 2175399102: Loading server list from cache.[0m
[92m2021-09-29 21:09:49 I/Net 2175399102: Server list: 111.30.169.93:80, 111.30.178.182:8080, 36.155.229.117:14000, 120.232.18.82:8080, msfwifi.3g.qq.com:8080, 36.155.249.96:80, 120.232.19.169:443, 36.155.229.203:14000, 111.30.178.34:80, 111.30.181.202:80.[0m
[92m2021-09-29 21:09:49 I/Net 2175399102: ECDH key is valid.[0m
[0m2021-09-29 21:09:49 V/Net 2175399102: Send: wtlogin.exchange_emp[0m
[0m2021-09-29 21:09:49 V/Net 2175399102: Recv: wtlogin.exchange_emp[0m
[0m2021-09-29 21:09:49 V/Net 2175399102: Send: StatSvc.register(online)[0m
[0m2021-09-29 21:09:49 V/Net 2175399102: Recv: StatSvc.register[0m
[92m2021-09-29 21:09:49 I/Net 2175399102: Scheduled refresh login session in 19d 23h 55min 0.0s.[0m
[92m2021-09-29 21:09:49 I/Net 2175399102: Scheduled key refresh in 23h 55min 0.0s.[0m
[0m2021-09-29 21:09:52 V/Net 2175399102: Recv: ConfigPushSvc.PushReq[0m
[92m2021-09-29 21:09:52 I/Net 2175399102: Server list: msfwifi.3g.qq.com:8080, 111.30.178.182:80, 111.30.187.201:80, 120.232.19.182:8080, 111.30.179.153:80, 120.232.19.169:443, 111.30.169.27:8080, 36.155.249.96:14000, 36.155.208.73:80, 36.155.249.120:14000.[0m
[0m2021-09-29 21:09:52 V/Net 2175399102: Saving bdh session to cache[0m
[0m2021-09-29 21:09:52 V/Net 2175399102: Saving server list to cache[0m
[0m2021-09-29 21:09:52 V/Net 2175399102: Send: ConfigPushSvc.PushResp(ConfigPushSvc.PushResp)[0m
[0m2021-09-29 21:09:52 V/Net 2175399102: Recv: ConfigPushSvc.PushReq[0m
[0m2021-09-29 21:09:52 V/Net 2175399102: Saving bdh session to cache[0m
[0m2021-09-29 21:09:52 V/Net 2175399102: Send: ConfigPushSvc.PushResp(ConfigPushSvc.PushResp)[0m
[0m2021-09-29 21:12:09 V/Net 2175399102: Send: MessageSvc.PbSendMsg(MessageSvc.PbSendMsg)[0m
[0m2021-09-29 21:12:09 V/Net 2175399102: Recv: MessageSvc.PbSendMsg[0m
[0m2021-09-29 21:14:02 V/Net 2175399102: Send: MessageSvc.PbSendMsg(MessageSvc.PbSendMsg)[0m
[0m2021-09-29 21:14:02 V/Net 2175399102: Recv: MessageSvc.PbSendMsg[0m
[91m2021-09-29 22:38:20 W/Net 2175399102: HeartbeatFailedException: AliveHeartbeat, recoverable=true, cause=PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
HeartbeatFailedException: AliveHeartbeat, recoverable=true, cause=PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1$1.invoke(NettyNetworkHandler.kt:361)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1$1.invoke(NettyNetworkHandler.kt:361)
	at net.mamoe.mirai.internal.network.handler.NetworkHandlerSupport.setStateImpl$mirai_core(NetworkHandlerSupport.kt:251)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1.invoke(NettyNetworkHandler.kt:407)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1.invoke(NettyNetworkHandler.kt:360)
	at net.mamoe.mirai.internal.network.components.TimeBasedHeartbeatSchedulerImpl$launchHeartbeatJobAsync$1.invokeSuspend(HeartbeatScheduler.kt:108)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.internal.ScopeCoroutine.afterResume(Scopes.kt:33)
	at kotlinx.coroutines.AbstractCoroutine.resumeWith(AbstractCoroutine.kt:102)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)
	at kotlinx.coroutines.internal.ScopeCoroutine.afterResume(Scopes.kt:33)
	at kotlinx.coroutines.AbstractCoroutine.resumeWith(AbstractCoroutine.kt:102)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:571)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:750)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:678)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:665)
Caused by: PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
	... 13 more
Caused by: kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms
	at kotlinx.coroutines.TimeoutKt.TimeoutCancellationException(Timeout.kt:186)
	at kotlinx.coroutines.TimeoutCoroutine.run(Timeout.kt:156)
	at kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask.run(EventLoop.common.kt:497)
	at kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274)
	at kotlinx.coroutines.DefaultExecutor.run(DefaultExecutor.kt:69)
	at java.base/java.lang.Thread.run(Thread.java:833)
[0m
[91m2021-09-29 22:38:20 W/Net 2175399102: io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /163.177.89.195:443
io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /163.177.89.195:443
	Suppressed: kotlinx.coroutines.JobCancellationException: Parent job is Cancelling; job=JobImpl{Cancelled}@7dccc354
	Caused by: [CIRCULAR REFERENCE: io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /163.177.89.195:443]
	Suppressed: [CIRCULAR REFERENCE: kotlinx.coroutines.JobCancellationException: Parent job is Cancelling; job=JobImpl{Cancelled}@7dccc354]
Caused by: java.net.NoRouteToHostException: No route to host: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:330)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:707)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:833)
[0m
[0m2021-09-29 22:38:23 V/Net 2175399102: Loading server list from cache.[0m
[92m2021-09-29 22:38:23 I/Net 2175399102: Server list: msfwifi.3g.qq.com:8080, 111.30.178.182:80, 111.30.187.201:80, 120.232.19.182:8080, 111.30.179.153:80, 120.232.19.169:443, 111.30.169.27:8080, 36.155.249.96:14000, 36.155.208.73:80, 36.155.249.120:14000.[0m
[92m2021-09-29 22:38:23 I/Net 2175399102: ECDH key is valid.[0m
[0m2021-09-29 22:38:23 V/Net 2175399102: Send: wtlogin.exchange_emp[0m
[0m2021-09-29 22:38:23 V/Net 2175399102: Recv: wtlogin.exchange_emp[0m
[0m2021-09-29 22:38:23 V/Net 2175399102: Send: StatSvc.register(online)[0m
[0m2021-09-29 22:38:23 V/Net 2175399102: Recv: StatSvc.register[0m
[92m2021-09-29 22:38:23 I/Net 2175399102: Scheduled key refresh in 23h 55min 0.0s.[0m
[92m2021-09-29 22:38:23 I/Net 2175399102: Scheduled refresh login session in 19d 23h 55min 0.0s.[0m
[0m2021-09-29 22:38:26 V/Net 2175399102: Recv: ConfigPushSvc.PushReq[0m
[92m2021-09-29 22:38:26 I/Net 2175399102: Server list: 114.221.151.171:80, msfwifi.3g.qq.com:8080, 113.96.12.217:8080, 125.94.60.146:8080, 114.221.148.192:8080, 42.81.170.51:443, 125.94.60.175:14000, 42.81.172.147:80, 42.81.184.82:443, 42.81.184.69:443.[0m
[0m2021-09-29 22:38:26 V/Net 2175399102: Saving bdh session to cache[0m
[0m2021-09-29 22:38:26 V/Net 2175399102: Saving server list to cache[0m
[0m2021-09-29 22:38:26 V/Net 2175399102: Send: ConfigPushSvc.PushResp(ConfigPushSvc.PushResp)[0m
[0m2021-09-29 22:38:26 V/Net 2175399102: Recv: ConfigPushSvc.PushReq[0m
[0m2021-09-29 22:38:26 V/Net 2175399102: Saving bdh session to cache[0m
[0m2021-09-29 22:38:26 V/Net 2175399102: Send: ConfigPushSvc.PushResp(ConfigPushSvc.PushResp)[0m
